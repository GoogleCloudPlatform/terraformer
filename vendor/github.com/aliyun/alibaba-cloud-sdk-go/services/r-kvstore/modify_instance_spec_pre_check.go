package r_kvstore

//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.
//
// Code generated by Alibaba Cloud SDK Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import (
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
)

// ModifyInstanceSpecPreCheck invokes the r_kvstore.ModifyInstanceSpecPreCheck API synchronously
// api document: https://help.aliyun.com/api/r-kvstore/modifyinstancespecprecheck.html
func (client *Client) ModifyInstanceSpecPreCheck(request *ModifyInstanceSpecPreCheckRequest) (response *ModifyInstanceSpecPreCheckResponse, err error) {
	response = CreateModifyInstanceSpecPreCheckResponse()
	err = client.DoAction(request, response)
	return
}

// ModifyInstanceSpecPreCheckWithChan invokes the r_kvstore.ModifyInstanceSpecPreCheck API asynchronously
// api document: https://help.aliyun.com/api/r-kvstore/modifyinstancespecprecheck.html
// asynchronous document: https://help.aliyun.com/document_detail/66220.html
func (client *Client) ModifyInstanceSpecPreCheckWithChan(request *ModifyInstanceSpecPreCheckRequest) (<-chan *ModifyInstanceSpecPreCheckResponse, <-chan error) {
	responseChan := make(chan *ModifyInstanceSpecPreCheckResponse, 1)
	errChan := make(chan error, 1)
	err := client.AddAsyncTask(func() {
		defer close(responseChan)
		defer close(errChan)
		response, err := client.ModifyInstanceSpecPreCheck(request)
		if err != nil {
			errChan <- err
		} else {
			responseChan <- response
		}
	})
	if err != nil {
		errChan <- err
		close(responseChan)
		close(errChan)
	}
	return responseChan, errChan
}

// ModifyInstanceSpecPreCheckWithCallback invokes the r_kvstore.ModifyInstanceSpecPreCheck API asynchronously
// api document: https://help.aliyun.com/api/r-kvstore/modifyinstancespecprecheck.html
// asynchronous document: https://help.aliyun.com/document_detail/66220.html
func (client *Client) ModifyInstanceSpecPreCheckWithCallback(request *ModifyInstanceSpecPreCheckRequest, callback func(response *ModifyInstanceSpecPreCheckResponse, err error)) <-chan int {
	result := make(chan int, 1)
	err := client.AddAsyncTask(func() {
		var response *ModifyInstanceSpecPreCheckResponse
		var err error
		defer close(result)
		response, err = client.ModifyInstanceSpecPreCheck(request)
		callback(response, err)
		result <- 1
	})
	if err != nil {
		defer close(result)
		callback(nil, err)
		result <- 0
	}
	return result
}

// ModifyInstanceSpecPreCheckRequest is the request struct for api ModifyInstanceSpecPreCheck
type ModifyInstanceSpecPreCheckRequest struct {
	*requests.RpcRequest
	ResourceOwnerId      requests.Integer `position:"Query" name:"ResourceOwnerId"`
	InstanceId           string           `position:"Query" name:"InstanceId"`
	SecurityToken        string           `position:"Query" name:"SecurityToken"`
	ResourceOwnerAccount string           `position:"Query" name:"ResourceOwnerAccount"`
	OwnerAccount         string           `position:"Query" name:"OwnerAccount"`
	OwnerId              requests.Integer `position:"Query" name:"OwnerId"`
	TargetInstanceClass  string           `position:"Query" name:"TargetInstanceClass"`
}

// ModifyInstanceSpecPreCheckResponse is the response struct for api ModifyInstanceSpecPreCheck
type ModifyInstanceSpecPreCheckResponse struct {
	*responses.BaseResponse
	RequestId       string         `json:"RequestId" xml:"RequestId"`
	IsAllowModify   bool           `json:"IsAllowModify" xml:"IsAllowModify"`
	DisableCommands string         `json:"DisableCommands" xml:"DisableCommands"`
	PreCheckResult  PreCheckResult `json:"PreCheckResult" xml:"PreCheckResult"`
}

// CreateModifyInstanceSpecPreCheckRequest creates a request to invoke ModifyInstanceSpecPreCheck API
func CreateModifyInstanceSpecPreCheckRequest() (request *ModifyInstanceSpecPreCheckRequest) {
	request = &ModifyInstanceSpecPreCheckRequest{
		RpcRequest: &requests.RpcRequest{},
	}
	request.InitWithApiInfo("R-kvstore", "2015-01-01", "ModifyInstanceSpecPreCheck", "redisa", "openAPI")
	return
}

// CreateModifyInstanceSpecPreCheckResponse creates a response to parse from ModifyInstanceSpecPreCheck response
func CreateModifyInstanceSpecPreCheckResponse() (response *ModifyInstanceSpecPreCheckResponse) {
	response = &ModifyInstanceSpecPreCheckResponse{
		BaseResponse: &responses.BaseResponse{},
	}
	return
}
