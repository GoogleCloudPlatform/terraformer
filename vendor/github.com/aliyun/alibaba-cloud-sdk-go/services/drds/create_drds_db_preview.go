package drds

//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.
//
// Code generated by Alibaba Cloud SDK Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import (
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
)

// CreateDrdsDBPreview invokes the drds.CreateDrdsDBPreview API synchronously
// api document: https://help.aliyun.com/api/drds/createdrdsdbpreview.html
func (client *Client) CreateDrdsDBPreview(request *CreateDrdsDBPreviewRequest) (response *CreateDrdsDBPreviewResponse, err error) {
	response = CreateCreateDrdsDBPreviewResponse()
	err = client.DoAction(request, response)
	return
}

// CreateDrdsDBPreviewWithChan invokes the drds.CreateDrdsDBPreview API asynchronously
// api document: https://help.aliyun.com/api/drds/createdrdsdbpreview.html
// asynchronous document: https://help.aliyun.com/document_detail/66220.html
func (client *Client) CreateDrdsDBPreviewWithChan(request *CreateDrdsDBPreviewRequest) (<-chan *CreateDrdsDBPreviewResponse, <-chan error) {
	responseChan := make(chan *CreateDrdsDBPreviewResponse, 1)
	errChan := make(chan error, 1)
	err := client.AddAsyncTask(func() {
		defer close(responseChan)
		defer close(errChan)
		response, err := client.CreateDrdsDBPreview(request)
		if err != nil {
			errChan <- err
		} else {
			responseChan <- response
		}
	})
	if err != nil {
		errChan <- err
		close(responseChan)
		close(errChan)
	}
	return responseChan, errChan
}

// CreateDrdsDBPreviewWithCallback invokes the drds.CreateDrdsDBPreview API asynchronously
// api document: https://help.aliyun.com/api/drds/createdrdsdbpreview.html
// asynchronous document: https://help.aliyun.com/document_detail/66220.html
func (client *Client) CreateDrdsDBPreviewWithCallback(request *CreateDrdsDBPreviewRequest, callback func(response *CreateDrdsDBPreviewResponse, err error)) <-chan int {
	result := make(chan int, 1)
	err := client.AddAsyncTask(func() {
		var response *CreateDrdsDBPreviewResponse
		var err error
		defer close(result)
		response, err = client.CreateDrdsDBPreview(request)
		callback(response, err)
		result <- 1
	})
	if err != nil {
		defer close(result)
		callback(nil, err)
		result <- 0
	}
	return result
}

// CreateDrdsDBPreviewRequest is the request struct for api CreateDrdsDBPreview
type CreateDrdsDBPreviewRequest struct {
	*requests.RpcRequest
	InstDbName           *[]CreateDrdsDBPreviewInstDbName `position:"Query" name:"InstDbName"  type:"Repeated"`
	DbName               string                           `position:"Query" name:"DbName"`
	AccountName          string                           `position:"Query" name:"AccountName"`
	OrderId              string                           `position:"Query" name:"OrderId"`
	RdsInstance          *[]string                        `position:"Query" name:"RdsInstance"  type:"Repeated"`
	Type                 string                           `position:"Query" name:"Type"`
	DbInstType           string                           `position:"Query" name:"DbInstType"`
	DrdsInstanceId       string                           `position:"Query" name:"DrdsInstanceId"`
	DbInstanceIsCreating requests.Boolean                 `position:"Query" name:"DbInstanceIsCreating"`
}

// CreateDrdsDBPreviewInstDbName is a repeated param struct in CreateDrdsDBPreviewRequest
type CreateDrdsDBPreviewInstDbName struct {
	ShardDbName  *[]string `name:"ShardDbName" type:"Repeated"`
	DbInstanceId string    `name:"DbInstanceId"`
}

// CreateDrdsDBPreviewResponse is the response struct for api CreateDrdsDBPreview
type CreateDrdsDBPreviewResponse struct {
	*responses.BaseResponse
	RequestId string                     `json:"RequestId" xml:"RequestId"`
	Success   bool                       `json:"Success" xml:"Success"`
	Items     ItemsInCreateDrdsDBPreview `json:"Items" xml:"Items"`
}

// CreateCreateDrdsDBPreviewRequest creates a request to invoke CreateDrdsDBPreview API
func CreateCreateDrdsDBPreviewRequest() (request *CreateDrdsDBPreviewRequest) {
	request = &CreateDrdsDBPreviewRequest{
		RpcRequest: &requests.RpcRequest{},
	}
	request.InitWithApiInfo("Drds", "2019-01-23", "CreateDrdsDBPreview", "drds", "openAPI")
	return
}

// CreateCreateDrdsDBPreviewResponse creates a response to parse from CreateDrdsDBPreview response
func CreateCreateDrdsDBPreviewResponse() (response *CreateDrdsDBPreviewResponse) {
	response = &CreateDrdsDBPreviewResponse{
		BaseResponse: &responses.BaseResponse{},
	}
	return
}
