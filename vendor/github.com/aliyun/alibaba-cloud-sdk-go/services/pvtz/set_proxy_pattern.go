package pvtz

//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.
//
// Code generated by Alibaba Cloud SDK Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import (
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
)

// SetProxyPattern invokes the pvtz.SetProxyPattern API synchronously
// api document: https://help.aliyun.com/api/pvtz/setproxypattern.html
func (client *Client) SetProxyPattern(request *SetProxyPatternRequest) (response *SetProxyPatternResponse, err error) {
	response = CreateSetProxyPatternResponse()
	err = client.DoAction(request, response)
	return
}

// SetProxyPatternWithChan invokes the pvtz.SetProxyPattern API asynchronously
// api document: https://help.aliyun.com/api/pvtz/setproxypattern.html
// asynchronous document: https://help.aliyun.com/document_detail/66220.html
func (client *Client) SetProxyPatternWithChan(request *SetProxyPatternRequest) (<-chan *SetProxyPatternResponse, <-chan error) {
	responseChan := make(chan *SetProxyPatternResponse, 1)
	errChan := make(chan error, 1)
	err := client.AddAsyncTask(func() {
		defer close(responseChan)
		defer close(errChan)
		response, err := client.SetProxyPattern(request)
		if err != nil {
			errChan <- err
		} else {
			responseChan <- response
		}
	})
	if err != nil {
		errChan <- err
		close(responseChan)
		close(errChan)
	}
	return responseChan, errChan
}

// SetProxyPatternWithCallback invokes the pvtz.SetProxyPattern API asynchronously
// api document: https://help.aliyun.com/api/pvtz/setproxypattern.html
// asynchronous document: https://help.aliyun.com/document_detail/66220.html
func (client *Client) SetProxyPatternWithCallback(request *SetProxyPatternRequest, callback func(response *SetProxyPatternResponse, err error)) <-chan int {
	result := make(chan int, 1)
	err := client.AddAsyncTask(func() {
		var response *SetProxyPatternResponse
		var err error
		defer close(result)
		response, err = client.SetProxyPattern(request)
		callback(response, err)
		result <- 1
	})
	if err != nil {
		defer close(result)
		callback(nil, err)
		result <- 0
	}
	return result
}

// SetProxyPatternRequest is the request struct for api SetProxyPattern
type SetProxyPatternRequest struct {
	*requests.RpcRequest
	ProxyPattern string `position:"Query" name:"ProxyPattern"`
	UserClientIp string `position:"Query" name:"UserClientIp"`
	ZoneId       string `position:"Query" name:"ZoneId"`
	Lang         string `position:"Query" name:"Lang"`
}

// SetProxyPatternResponse is the response struct for api SetProxyPattern
type SetProxyPatternResponse struct {
	*responses.BaseResponse
	RequestId string `json:"RequestId" xml:"RequestId"`
	ZoneId    string `json:"ZoneId" xml:"ZoneId"`
}

// CreateSetProxyPatternRequest creates a request to invoke SetProxyPattern API
func CreateSetProxyPatternRequest() (request *SetProxyPatternRequest) {
	request = &SetProxyPatternRequest{
		RpcRequest: &requests.RpcRequest{},
	}
	request.InitWithApiInfo("pvtz", "2018-01-01", "SetProxyPattern", "pvtz", "openAPI")
	return
}

// CreateSetProxyPatternResponse creates a response to parse from SetProxyPattern response
func CreateSetProxyPatternResponse() (response *SetProxyPatternResponse) {
	response = &SetProxyPatternResponse{
		BaseResponse: &responses.BaseResponse{},
	}
	return
}
