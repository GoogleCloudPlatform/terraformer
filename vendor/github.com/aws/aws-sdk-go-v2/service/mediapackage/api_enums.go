// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package mediapackage

type AdMarkers string

// Enum values for AdMarkers
const (
	AdMarkersNone           AdMarkers = "NONE"
	AdMarkersScte35Enhanced AdMarkers = "SCTE35_ENHANCED"
	AdMarkersPassthrough    AdMarkers = "PASSTHROUGH"
)

func (enum AdMarkers) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum AdMarkers) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type AdTriggersElement string

// Enum values for AdTriggersElement
const (
	AdTriggersElementSpliceInsert                           AdTriggersElement = "SPLICE_INSERT"
	AdTriggersElementBreak                                  AdTriggersElement = "BREAK"
	AdTriggersElementProviderAdvertisement                  AdTriggersElement = "PROVIDER_ADVERTISEMENT"
	AdTriggersElementDistributorAdvertisement               AdTriggersElement = "DISTRIBUTOR_ADVERTISEMENT"
	AdTriggersElementProviderPlacementOpportunity           AdTriggersElement = "PROVIDER_PLACEMENT_OPPORTUNITY"
	AdTriggersElementDistributorPlacementOpportunity        AdTriggersElement = "DISTRIBUTOR_PLACEMENT_OPPORTUNITY"
	AdTriggersElementProviderOverlayPlacementOpportunity    AdTriggersElement = "PROVIDER_OVERLAY_PLACEMENT_OPPORTUNITY"
	AdTriggersElementDistributorOverlayPlacementOpportunity AdTriggersElement = "DISTRIBUTOR_OVERLAY_PLACEMENT_OPPORTUNITY"
)

func (enum AdTriggersElement) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum AdTriggersElement) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

// This setting allows the delivery restriction flags on SCTE-35 segmentation
// descriptors todetermine whether a message signals an ad. Choosing "NONE"
// means no SCTE-35 messages becomeads. Choosing "RESTRICTED" means SCTE-35
// messages of the types specified in AdTriggers thatcontain delivery restrictions
// will be treated as ads. Choosing "UNRESTRICTED" means SCTE-35messages of
// the types specified in AdTriggers that do not contain delivery restrictions
// willbe treated as ads. Choosing "BOTH" means all SCTE-35 messages of the
// types specified inAdTriggers will be treated as ads. Note that Splice Insert
// messages do not have these flagsand are always treated as ads if specified
// in AdTriggers.
type AdsOnDeliveryRestrictions string

// Enum values for AdsOnDeliveryRestrictions
const (
	AdsOnDeliveryRestrictionsNone         AdsOnDeliveryRestrictions = "NONE"
	AdsOnDeliveryRestrictionsRestricted   AdsOnDeliveryRestrictions = "RESTRICTED"
	AdsOnDeliveryRestrictionsUnrestricted AdsOnDeliveryRestrictions = "UNRESTRICTED"
	AdsOnDeliveryRestrictionsBoth         AdsOnDeliveryRestrictions = "BOTH"
)

func (enum AdsOnDeliveryRestrictions) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum AdsOnDeliveryRestrictions) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type EncryptionMethod string

// Enum values for EncryptionMethod
const (
	EncryptionMethodAes128    EncryptionMethod = "AES_128"
	EncryptionMethodSampleAes EncryptionMethod = "SAMPLE_AES"
)

func (enum EncryptionMethod) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum EncryptionMethod) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type ManifestLayout string

// Enum values for ManifestLayout
const (
	ManifestLayoutFull    ManifestLayout = "FULL"
	ManifestLayoutCompact ManifestLayout = "COMPACT"
)

func (enum ManifestLayout) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum ManifestLayout) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type Origination string

// Enum values for Origination
const (
	OriginationAllow Origination = "ALLOW"
	OriginationDeny  Origination = "DENY"
)

func (enum Origination) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum Origination) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type PeriodTriggersElement string

// Enum values for PeriodTriggersElement
const (
	PeriodTriggersElementAds PeriodTriggersElement = "ADS"
)

func (enum PeriodTriggersElement) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum PeriodTriggersElement) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type PlaylistType string

// Enum values for PlaylistType
const (
	PlaylistTypeNone  PlaylistType = "NONE"
	PlaylistTypeEvent PlaylistType = "EVENT"
	PlaylistTypeVod   PlaylistType = "VOD"
)

func (enum PlaylistType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum PlaylistType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type Profile string

// Enum values for Profile
const (
	ProfileNone    Profile = "NONE"
	ProfileHbbtv15 Profile = "HBBTV_1_5"
)

func (enum Profile) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum Profile) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type SegmentTemplateFormat string

// Enum values for SegmentTemplateFormat
const (
	SegmentTemplateFormatNumberWithTimeline SegmentTemplateFormat = "NUMBER_WITH_TIMELINE"
	SegmentTemplateFormatTimeWithTimeline   SegmentTemplateFormat = "TIME_WITH_TIMELINE"
	SegmentTemplateFormatNumberWithDuration SegmentTemplateFormat = "NUMBER_WITH_DURATION"
)

func (enum SegmentTemplateFormat) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum SegmentTemplateFormat) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type Status string

// Enum values for Status
const (
	StatusInProgress Status = "IN_PROGRESS"
	StatusSucceeded  Status = "SUCCEEDED"
	StatusFailed     Status = "FAILED"
)

func (enum Status) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum Status) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type StreamOrder string

// Enum values for StreamOrder
const (
	StreamOrderOriginal               StreamOrder = "ORIGINAL"
	StreamOrderVideoBitrateAscending  StreamOrder = "VIDEO_BITRATE_ASCENDING"
	StreamOrderVideoBitrateDescending StreamOrder = "VIDEO_BITRATE_DESCENDING"
)

func (enum StreamOrder) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum StreamOrder) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}
