// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package organizations

type AccessDeniedForDependencyExceptionReason string

// Enum values for AccessDeniedForDependencyExceptionReason
const (
	AccessDeniedForDependencyExceptionReasonAccessDeniedDuringCreateServiceLinkedRole AccessDeniedForDependencyExceptionReason = "ACCESS_DENIED_DURING_CREATE_SERVICE_LINKED_ROLE"
)

func (enum AccessDeniedForDependencyExceptionReason) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum AccessDeniedForDependencyExceptionReason) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type AccountJoinedMethod string

// Enum values for AccountJoinedMethod
const (
	AccountJoinedMethodInvited AccountJoinedMethod = "INVITED"
	AccountJoinedMethodCreated AccountJoinedMethod = "CREATED"
)

func (enum AccountJoinedMethod) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum AccountJoinedMethod) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type AccountStatus string

// Enum values for AccountStatus
const (
	AccountStatusActive    AccountStatus = "ACTIVE"
	AccountStatusSuspended AccountStatus = "SUSPENDED"
)

func (enum AccountStatus) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum AccountStatus) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type ActionType string

// Enum values for ActionType
const (
	ActionTypeInvite                            ActionType = "INVITE"
	ActionTypeEnableAllFeatures                 ActionType = "ENABLE_ALL_FEATURES"
	ActionTypeApproveAllFeatures                ActionType = "APPROVE_ALL_FEATURES"
	ActionTypeAddOrganizationsServiceLinkedRole ActionType = "ADD_ORGANIZATIONS_SERVICE_LINKED_ROLE"
)

func (enum ActionType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum ActionType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type ChildType string

// Enum values for ChildType
const (
	ChildTypeAccount            ChildType = "ACCOUNT"
	ChildTypeOrganizationalUnit ChildType = "ORGANIZATIONAL_UNIT"
)

func (enum ChildType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum ChildType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type ConstraintViolationExceptionReason string

// Enum values for ConstraintViolationExceptionReason
const (
	ConstraintViolationExceptionReasonAccountNumberLimitExceeded                        ConstraintViolationExceptionReason = "ACCOUNT_NUMBER_LIMIT_EXCEEDED"
	ConstraintViolationExceptionReasonHandshakeRateLimitExceeded                        ConstraintViolationExceptionReason = "HANDSHAKE_RATE_LIMIT_EXCEEDED"
	ConstraintViolationExceptionReasonOuNumberLimitExceeded                             ConstraintViolationExceptionReason = "OU_NUMBER_LIMIT_EXCEEDED"
	ConstraintViolationExceptionReasonOuDepthLimitExceeded                              ConstraintViolationExceptionReason = "OU_DEPTH_LIMIT_EXCEEDED"
	ConstraintViolationExceptionReasonPolicyNumberLimitExceeded                         ConstraintViolationExceptionReason = "POLICY_NUMBER_LIMIT_EXCEEDED"
	ConstraintViolationExceptionReasonPolicyContentLimitExceeded                        ConstraintViolationExceptionReason = "POLICY_CONTENT_LIMIT_EXCEEDED"
	ConstraintViolationExceptionReasonMaxPolicyTypeAttachmentLimitExceeded              ConstraintViolationExceptionReason = "MAX_POLICY_TYPE_ATTACHMENT_LIMIT_EXCEEDED"
	ConstraintViolationExceptionReasonMinPolicyTypeAttachmentLimitExceeded              ConstraintViolationExceptionReason = "MIN_POLICY_TYPE_ATTACHMENT_LIMIT_EXCEEDED"
	ConstraintViolationExceptionReasonAccountCannotLeaveOrganization                    ConstraintViolationExceptionReason = "ACCOUNT_CANNOT_LEAVE_ORGANIZATION"
	ConstraintViolationExceptionReasonAccountCannotLeaveWithoutEula                     ConstraintViolationExceptionReason = "ACCOUNT_CANNOT_LEAVE_WITHOUT_EULA"
	ConstraintViolationExceptionReasonAccountCannotLeaveWithoutPhoneVerification        ConstraintViolationExceptionReason = "ACCOUNT_CANNOT_LEAVE_WITHOUT_PHONE_VERIFICATION"
	ConstraintViolationExceptionReasonMasterAccountPaymentInstrumentRequired            ConstraintViolationExceptionReason = "MASTER_ACCOUNT_PAYMENT_INSTRUMENT_REQUIRED"
	ConstraintViolationExceptionReasonMemberAccountPaymentInstrumentRequired            ConstraintViolationExceptionReason = "MEMBER_ACCOUNT_PAYMENT_INSTRUMENT_REQUIRED"
	ConstraintViolationExceptionReasonAccountCreationRateLimitExceeded                  ConstraintViolationExceptionReason = "ACCOUNT_CREATION_RATE_LIMIT_EXCEEDED"
	ConstraintViolationExceptionReasonMasterAccountAddressDoesNotMatchMarketplace       ConstraintViolationExceptionReason = "MASTER_ACCOUNT_ADDRESS_DOES_NOT_MATCH_MARKETPLACE"
	ConstraintViolationExceptionReasonMasterAccountMissingContactInfo                   ConstraintViolationExceptionReason = "MASTER_ACCOUNT_MISSING_CONTACT_INFO"
	ConstraintViolationExceptionReasonMasterAccountNotGovcloudEnabled                   ConstraintViolationExceptionReason = "MASTER_ACCOUNT_NOT_GOVCLOUD_ENABLED"
	ConstraintViolationExceptionReasonOrganizationNotInAllFeaturesMode                  ConstraintViolationExceptionReason = "ORGANIZATION_NOT_IN_ALL_FEATURES_MODE"
	ConstraintViolationExceptionReasonCreateOrganizationInBillingModeUnsupportedRegion  ConstraintViolationExceptionReason = "CREATE_ORGANIZATION_IN_BILLING_MODE_UNSUPPORTED_REGION"
	ConstraintViolationExceptionReasonEmailVerificationCodeExpired                      ConstraintViolationExceptionReason = "EMAIL_VERIFICATION_CODE_EXPIRED"
	ConstraintViolationExceptionReasonWaitPeriodActive                                  ConstraintViolationExceptionReason = "WAIT_PERIOD_ACTIVE"
	ConstraintViolationExceptionReasonMaxTagLimitExceeded                               ConstraintViolationExceptionReason = "MAX_TAG_LIMIT_EXCEEDED"
	ConstraintViolationExceptionReasonTagPolicyViolation                                ConstraintViolationExceptionReason = "TAG_POLICY_VIOLATION"
	ConstraintViolationExceptionReasonMaxDelegatedAdministratorsForServiceLimitExceeded ConstraintViolationExceptionReason = "MAX_DELEGATED_ADMINISTRATORS_FOR_SERVICE_LIMIT_EXCEEDED"
	ConstraintViolationExceptionReasonCannotRegisterMasterAsDelegatedAdministrator      ConstraintViolationExceptionReason = "CANNOT_REGISTER_MASTER_AS_DELEGATED_ADMINISTRATOR"
	ConstraintViolationExceptionReasonCannotRemoveDelegatedAdministratorFromOrg         ConstraintViolationExceptionReason = "CANNOT_REMOVE_DELEGATED_ADMINISTRATOR_FROM_ORG"
	ConstraintViolationExceptionReasonDelegatedAdministratorExistsForThisService        ConstraintViolationExceptionReason = "DELEGATED_ADMINISTRATOR_EXISTS_FOR_THIS_SERVICE"
)

func (enum ConstraintViolationExceptionReason) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum ConstraintViolationExceptionReason) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type CreateAccountFailureReason string

// Enum values for CreateAccountFailureReason
const (
	CreateAccountFailureReasonAccountLimitExceeded          CreateAccountFailureReason = "ACCOUNT_LIMIT_EXCEEDED"
	CreateAccountFailureReasonEmailAlreadyExists            CreateAccountFailureReason = "EMAIL_ALREADY_EXISTS"
	CreateAccountFailureReasonInvalidAddress                CreateAccountFailureReason = "INVALID_ADDRESS"
	CreateAccountFailureReasonInvalidEmail                  CreateAccountFailureReason = "INVALID_EMAIL"
	CreateAccountFailureReasonConcurrentAccountModification CreateAccountFailureReason = "CONCURRENT_ACCOUNT_MODIFICATION"
	CreateAccountFailureReasonInternalFailure               CreateAccountFailureReason = "INTERNAL_FAILURE"
	CreateAccountFailureReasonGovcloudAccountAlreadyExists  CreateAccountFailureReason = "GOVCLOUD_ACCOUNT_ALREADY_EXISTS"
)

func (enum CreateAccountFailureReason) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum CreateAccountFailureReason) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type CreateAccountState string

// Enum values for CreateAccountState
const (
	CreateAccountStateInProgress CreateAccountState = "IN_PROGRESS"
	CreateAccountStateSucceeded  CreateAccountState = "SUCCEEDED"
	CreateAccountStateFailed     CreateAccountState = "FAILED"
)

func (enum CreateAccountState) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum CreateAccountState) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type EffectivePolicyType string

// Enum values for EffectivePolicyType
const (
	EffectivePolicyTypeTagPolicy EffectivePolicyType = "TAG_POLICY"
)

func (enum EffectivePolicyType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum EffectivePolicyType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type HandshakeConstraintViolationExceptionReason string

// Enum values for HandshakeConstraintViolationExceptionReason
const (
	HandshakeConstraintViolationExceptionReasonAccountNumberLimitExceeded                    HandshakeConstraintViolationExceptionReason = "ACCOUNT_NUMBER_LIMIT_EXCEEDED"
	HandshakeConstraintViolationExceptionReasonHandshakeRateLimitExceeded                    HandshakeConstraintViolationExceptionReason = "HANDSHAKE_RATE_LIMIT_EXCEEDED"
	HandshakeConstraintViolationExceptionReasonAlreadyInAnOrganization                       HandshakeConstraintViolationExceptionReason = "ALREADY_IN_AN_ORGANIZATION"
	HandshakeConstraintViolationExceptionReasonOrganizationAlreadyHasAllFeatures             HandshakeConstraintViolationExceptionReason = "ORGANIZATION_ALREADY_HAS_ALL_FEATURES"
	HandshakeConstraintViolationExceptionReasonInviteDisabledDuringEnableAllFeatures         HandshakeConstraintViolationExceptionReason = "INVITE_DISABLED_DURING_ENABLE_ALL_FEATURES"
	HandshakeConstraintViolationExceptionReasonPaymentInstrumentRequired                     HandshakeConstraintViolationExceptionReason = "PAYMENT_INSTRUMENT_REQUIRED"
	HandshakeConstraintViolationExceptionReasonOrganizationFromDifferentSellerOfRecord       HandshakeConstraintViolationExceptionReason = "ORGANIZATION_FROM_DIFFERENT_SELLER_OF_RECORD"
	HandshakeConstraintViolationExceptionReasonOrganizationMembershipChangeRateLimitExceeded HandshakeConstraintViolationExceptionReason = "ORGANIZATION_MEMBERSHIP_CHANGE_RATE_LIMIT_EXCEEDED"
)

func (enum HandshakeConstraintViolationExceptionReason) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum HandshakeConstraintViolationExceptionReason) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type HandshakePartyType string

// Enum values for HandshakePartyType
const (
	HandshakePartyTypeAccount      HandshakePartyType = "ACCOUNT"
	HandshakePartyTypeOrganization HandshakePartyType = "ORGANIZATION"
	HandshakePartyTypeEmail        HandshakePartyType = "EMAIL"
)

func (enum HandshakePartyType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum HandshakePartyType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type HandshakeResourceType string

// Enum values for HandshakeResourceType
const (
	HandshakeResourceTypeAccount                HandshakeResourceType = "ACCOUNT"
	HandshakeResourceTypeOrganization           HandshakeResourceType = "ORGANIZATION"
	HandshakeResourceTypeOrganizationFeatureSet HandshakeResourceType = "ORGANIZATION_FEATURE_SET"
	HandshakeResourceTypeEmail                  HandshakeResourceType = "EMAIL"
	HandshakeResourceTypeMasterEmail            HandshakeResourceType = "MASTER_EMAIL"
	HandshakeResourceTypeMasterName             HandshakeResourceType = "MASTER_NAME"
	HandshakeResourceTypeNotes                  HandshakeResourceType = "NOTES"
	HandshakeResourceTypeParentHandshake        HandshakeResourceType = "PARENT_HANDSHAKE"
)

func (enum HandshakeResourceType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum HandshakeResourceType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type HandshakeState string

// Enum values for HandshakeState
const (
	HandshakeStateRequested HandshakeState = "REQUESTED"
	HandshakeStateOpen      HandshakeState = "OPEN"
	HandshakeStateCanceled  HandshakeState = "CANCELED"
	HandshakeStateAccepted  HandshakeState = "ACCEPTED"
	HandshakeStateDeclined  HandshakeState = "DECLINED"
	HandshakeStateExpired   HandshakeState = "EXPIRED"
)

func (enum HandshakeState) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum HandshakeState) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type IAMUserAccessToBilling string

// Enum values for IAMUserAccessToBilling
const (
	IAMUserAccessToBillingAllow IAMUserAccessToBilling = "ALLOW"
	IAMUserAccessToBillingDeny  IAMUserAccessToBilling = "DENY"
)

func (enum IAMUserAccessToBilling) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum IAMUserAccessToBilling) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type InvalidInputExceptionReason string

// Enum values for InvalidInputExceptionReason
const (
	InvalidInputExceptionReasonInvalidPartyTypeTarget             InvalidInputExceptionReason = "INVALID_PARTY_TYPE_TARGET"
	InvalidInputExceptionReasonInvalidSyntaxOrganizationArn       InvalidInputExceptionReason = "INVALID_SYNTAX_ORGANIZATION_ARN"
	InvalidInputExceptionReasonInvalidSyntaxPolicyId              InvalidInputExceptionReason = "INVALID_SYNTAX_POLICY_ID"
	InvalidInputExceptionReasonInvalidEnum                        InvalidInputExceptionReason = "INVALID_ENUM"
	InvalidInputExceptionReasonInvalidEnumPolicyType              InvalidInputExceptionReason = "INVALID_ENUM_POLICY_TYPE"
	InvalidInputExceptionReasonInvalidListMember                  InvalidInputExceptionReason = "INVALID_LIST_MEMBER"
	InvalidInputExceptionReasonMaxLengthExceeded                  InvalidInputExceptionReason = "MAX_LENGTH_EXCEEDED"
	InvalidInputExceptionReasonMaxValueExceeded                   InvalidInputExceptionReason = "MAX_VALUE_EXCEEDED"
	InvalidInputExceptionReasonMinLengthExceeded                  InvalidInputExceptionReason = "MIN_LENGTH_EXCEEDED"
	InvalidInputExceptionReasonMinValueExceeded                   InvalidInputExceptionReason = "MIN_VALUE_EXCEEDED"
	InvalidInputExceptionReasonImmutablePolicy                    InvalidInputExceptionReason = "IMMUTABLE_POLICY"
	InvalidInputExceptionReasonInvalidPattern                     InvalidInputExceptionReason = "INVALID_PATTERN"
	InvalidInputExceptionReasonInvalidPatternTargetId             InvalidInputExceptionReason = "INVALID_PATTERN_TARGET_ID"
	InvalidInputExceptionReasonInputRequired                      InvalidInputExceptionReason = "INPUT_REQUIRED"
	InvalidInputExceptionReasonInvalidNextToken                   InvalidInputExceptionReason = "INVALID_NEXT_TOKEN"
	InvalidInputExceptionReasonMaxLimitExceededFilter             InvalidInputExceptionReason = "MAX_LIMIT_EXCEEDED_FILTER"
	InvalidInputExceptionReasonMovingAccountBetweenDifferentRoots InvalidInputExceptionReason = "MOVING_ACCOUNT_BETWEEN_DIFFERENT_ROOTS"
	InvalidInputExceptionReasonInvalidFullNameTarget              InvalidInputExceptionReason = "INVALID_FULL_NAME_TARGET"
	InvalidInputExceptionReasonUnrecognizedServicePrincipal       InvalidInputExceptionReason = "UNRECOGNIZED_SERVICE_PRINCIPAL"
	InvalidInputExceptionReasonInvalidRoleName                    InvalidInputExceptionReason = "INVALID_ROLE_NAME"
	InvalidInputExceptionReasonInvalidSystemTagsParameter         InvalidInputExceptionReason = "INVALID_SYSTEM_TAGS_PARAMETER"
	InvalidInputExceptionReasonTargetNotSupported                 InvalidInputExceptionReason = "TARGET_NOT_SUPPORTED"
)

func (enum InvalidInputExceptionReason) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum InvalidInputExceptionReason) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type OrganizationFeatureSet string

// Enum values for OrganizationFeatureSet
const (
	OrganizationFeatureSetAll                 OrganizationFeatureSet = "ALL"
	OrganizationFeatureSetConsolidatedBilling OrganizationFeatureSet = "CONSOLIDATED_BILLING"
)

func (enum OrganizationFeatureSet) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum OrganizationFeatureSet) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type ParentType string

// Enum values for ParentType
const (
	ParentTypeRoot               ParentType = "ROOT"
	ParentTypeOrganizationalUnit ParentType = "ORGANIZATIONAL_UNIT"
)

func (enum ParentType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum ParentType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type PolicyType string

// Enum values for PolicyType
const (
	PolicyTypeServiceControlPolicy PolicyType = "SERVICE_CONTROL_POLICY"
	PolicyTypeTagPolicy            PolicyType = "TAG_POLICY"
)

func (enum PolicyType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum PolicyType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type PolicyTypeStatus string

// Enum values for PolicyTypeStatus
const (
	PolicyTypeStatusEnabled        PolicyTypeStatus = "ENABLED"
	PolicyTypeStatusPendingEnable  PolicyTypeStatus = "PENDING_ENABLE"
	PolicyTypeStatusPendingDisable PolicyTypeStatus = "PENDING_DISABLE"
)

func (enum PolicyTypeStatus) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum PolicyTypeStatus) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type TargetType string

// Enum values for TargetType
const (
	TargetTypeAccount            TargetType = "ACCOUNT"
	TargetTypeOrganizationalUnit TargetType = "ORGANIZATIONAL_UNIT"
	TargetTypeRoot               TargetType = "ROOT"
)

func (enum TargetType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum TargetType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}
