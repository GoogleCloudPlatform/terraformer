// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package ecr

type FindingSeverity string

// Enum values for FindingSeverity
const (
	FindingSeverityInformational FindingSeverity = "INFORMATIONAL"
	FindingSeverityLow           FindingSeverity = "LOW"
	FindingSeverityMedium        FindingSeverity = "MEDIUM"
	FindingSeverityHigh          FindingSeverity = "HIGH"
	FindingSeverityCritical      FindingSeverity = "CRITICAL"
	FindingSeverityUndefined     FindingSeverity = "UNDEFINED"
)

func (enum FindingSeverity) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum FindingSeverity) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type ImageActionType string

// Enum values for ImageActionType
const (
	ImageActionTypeExpire ImageActionType = "EXPIRE"
)

func (enum ImageActionType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum ImageActionType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type ImageFailureCode string

// Enum values for ImageFailureCode
const (
	ImageFailureCodeInvalidImageDigest         ImageFailureCode = "InvalidImageDigest"
	ImageFailureCodeInvalidImageTag            ImageFailureCode = "InvalidImageTag"
	ImageFailureCodeImageTagDoesNotMatchDigest ImageFailureCode = "ImageTagDoesNotMatchDigest"
	ImageFailureCodeImageNotFound              ImageFailureCode = "ImageNotFound"
	ImageFailureCodeMissingDigestAndTag        ImageFailureCode = "MissingDigestAndTag"
)

func (enum ImageFailureCode) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum ImageFailureCode) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type ImageTagMutability string

// Enum values for ImageTagMutability
const (
	ImageTagMutabilityMutable   ImageTagMutability = "MUTABLE"
	ImageTagMutabilityImmutable ImageTagMutability = "IMMUTABLE"
)

func (enum ImageTagMutability) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum ImageTagMutability) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type LayerAvailability string

// Enum values for LayerAvailability
const (
	LayerAvailabilityAvailable   LayerAvailability = "AVAILABLE"
	LayerAvailabilityUnavailable LayerAvailability = "UNAVAILABLE"
)

func (enum LayerAvailability) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum LayerAvailability) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type LayerFailureCode string

// Enum values for LayerFailureCode
const (
	LayerFailureCodeInvalidLayerDigest LayerFailureCode = "InvalidLayerDigest"
	LayerFailureCodeMissingLayerDigest LayerFailureCode = "MissingLayerDigest"
)

func (enum LayerFailureCode) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum LayerFailureCode) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type LifecyclePolicyPreviewStatus string

// Enum values for LifecyclePolicyPreviewStatus
const (
	LifecyclePolicyPreviewStatusInProgress LifecyclePolicyPreviewStatus = "IN_PROGRESS"
	LifecyclePolicyPreviewStatusComplete   LifecyclePolicyPreviewStatus = "COMPLETE"
	LifecyclePolicyPreviewStatusExpired    LifecyclePolicyPreviewStatus = "EXPIRED"
	LifecyclePolicyPreviewStatusFailed     LifecyclePolicyPreviewStatus = "FAILED"
)

func (enum LifecyclePolicyPreviewStatus) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum LifecyclePolicyPreviewStatus) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type ScanStatus string

// Enum values for ScanStatus
const (
	ScanStatusInProgress ScanStatus = "IN_PROGRESS"
	ScanStatusComplete   ScanStatus = "COMPLETE"
	ScanStatusFailed     ScanStatus = "FAILED"
)

func (enum ScanStatus) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum ScanStatus) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type TagStatus string

// Enum values for TagStatus
const (
	TagStatusTagged   TagStatus = "TAGGED"
	TagStatusUntagged TagStatus = "UNTAGGED"
	TagStatusAny      TagStatus = "ANY"
)

func (enum TagStatus) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum TagStatus) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}
