// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package rds

type ActivityStreamMode string

// Enum values for ActivityStreamMode
const (
	ActivityStreamModeSync  ActivityStreamMode = "sync"
	ActivityStreamModeAsync ActivityStreamMode = "async"
)

func (enum ActivityStreamMode) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum ActivityStreamMode) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type ActivityStreamStatus string

// Enum values for ActivityStreamStatus
const (
	ActivityStreamStatusStopped  ActivityStreamStatus = "stopped"
	ActivityStreamStatusStarting ActivityStreamStatus = "starting"
	ActivityStreamStatusStarted  ActivityStreamStatus = "started"
	ActivityStreamStatusStopping ActivityStreamStatus = "stopping"
)

func (enum ActivityStreamStatus) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum ActivityStreamStatus) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type ApplyMethod string

// Enum values for ApplyMethod
const (
	ApplyMethodImmediate     ApplyMethod = "immediate"
	ApplyMethodPendingReboot ApplyMethod = "pending-reboot"
)

func (enum ApplyMethod) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum ApplyMethod) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type AuthScheme string

// Enum values for AuthScheme
const (
	AuthSchemeSecrets AuthScheme = "SECRETS"
)

func (enum AuthScheme) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum AuthScheme) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type DBProxyStatus string

// Enum values for DBProxyStatus
const (
	DBProxyStatusAvailable                  DBProxyStatus = "available"
	DBProxyStatusModifying                  DBProxyStatus = "modifying"
	DBProxyStatusIncompatibleNetwork        DBProxyStatus = "incompatible-network"
	DBProxyStatusInsufficientResourceLimits DBProxyStatus = "insufficient-resource-limits"
	DBProxyStatusCreating                   DBProxyStatus = "creating"
	DBProxyStatusDeleting                   DBProxyStatus = "deleting"
	DBProxyStatusSuspended                  DBProxyStatus = "suspended"
	DBProxyStatusSuspending                 DBProxyStatus = "suspending"
	DBProxyStatusReactivating               DBProxyStatus = "reactivating"
)

func (enum DBProxyStatus) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum DBProxyStatus) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type EngineFamily string

// Enum values for EngineFamily
const (
	EngineFamilyMysql      EngineFamily = "MYSQL"
	EngineFamilyPostgresql EngineFamily = "POSTGRESQL"
)

func (enum EngineFamily) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum EngineFamily) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type IAMAuthMode string

// Enum values for IAMAuthMode
const (
	IAMAuthModeDisabled IAMAuthMode = "DISABLED"
	IAMAuthModeRequired IAMAuthMode = "REQUIRED"
)

func (enum IAMAuthMode) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum IAMAuthMode) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type SourceType string

// Enum values for SourceType
const (
	SourceTypeDbInstance        SourceType = "db-instance"
	SourceTypeDbParameterGroup  SourceType = "db-parameter-group"
	SourceTypeDbSecurityGroup   SourceType = "db-security-group"
	SourceTypeDbSnapshot        SourceType = "db-snapshot"
	SourceTypeDbCluster         SourceType = "db-cluster"
	SourceTypeDbClusterSnapshot SourceType = "db-cluster-snapshot"
)

func (enum SourceType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum SourceType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type TargetHealthReason string

// Enum values for TargetHealthReason
const (
	TargetHealthReasonUnreachable          TargetHealthReason = "UNREACHABLE"
	TargetHealthReasonConnectionFailed     TargetHealthReason = "CONNECTION_FAILED"
	TargetHealthReasonAuthFailure          TargetHealthReason = "AUTH_FAILURE"
	TargetHealthReasonPendingProxyCapacity TargetHealthReason = "PENDING_PROXY_CAPACITY"
)

func (enum TargetHealthReason) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum TargetHealthReason) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type TargetState string

// Enum values for TargetState
const (
	TargetStateRegistering TargetState = "REGISTERING"
	TargetStateAvailable   TargetState = "AVAILABLE"
	TargetStateUnavailable TargetState = "UNAVAILABLE"
)

func (enum TargetState) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum TargetState) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type TargetType string

// Enum values for TargetType
const (
	TargetTypeRdsInstance           TargetType = "RDS_INSTANCE"
	TargetTypeRdsServerlessEndpoint TargetType = "RDS_SERVERLESS_ENDPOINT"
	TargetTypeTrackedCluster        TargetType = "TRACKED_CLUSTER"
)

func (enum TargetType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum TargetType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}
