// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package elasticbeanstalk

type ActionHistoryStatus string

// Enum values for ActionHistoryStatus
const (
	ActionHistoryStatusCompleted ActionHistoryStatus = "Completed"
	ActionHistoryStatusFailed    ActionHistoryStatus = "Failed"
	ActionHistoryStatusUnknown   ActionHistoryStatus = "Unknown"
)

func (enum ActionHistoryStatus) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum ActionHistoryStatus) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type ActionStatus string

// Enum values for ActionStatus
const (
	ActionStatusScheduled ActionStatus = "Scheduled"
	ActionStatusPending   ActionStatus = "Pending"
	ActionStatusRunning   ActionStatus = "Running"
	ActionStatusUnknown   ActionStatus = "Unknown"
)

func (enum ActionStatus) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum ActionStatus) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type ActionType string

// Enum values for ActionType
const (
	ActionTypeInstanceRefresh ActionType = "InstanceRefresh"
	ActionTypePlatformUpdate  ActionType = "PlatformUpdate"
	ActionTypeUnknown         ActionType = "Unknown"
)

func (enum ActionType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum ActionType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type ApplicationVersionStatus string

// Enum values for ApplicationVersionStatus
const (
	ApplicationVersionStatusProcessed   ApplicationVersionStatus = "Processed"
	ApplicationVersionStatusUnprocessed ApplicationVersionStatus = "Unprocessed"
	ApplicationVersionStatusFailed      ApplicationVersionStatus = "Failed"
	ApplicationVersionStatusProcessing  ApplicationVersionStatus = "Processing"
	ApplicationVersionStatusBuilding    ApplicationVersionStatus = "Building"
)

func (enum ApplicationVersionStatus) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum ApplicationVersionStatus) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type ComputeType string

// Enum values for ComputeType
const (
	ComputeTypeBuildGeneral1Small  ComputeType = "BUILD_GENERAL1_SMALL"
	ComputeTypeBuildGeneral1Medium ComputeType = "BUILD_GENERAL1_MEDIUM"
	ComputeTypeBuildGeneral1Large  ComputeType = "BUILD_GENERAL1_LARGE"
)

func (enum ComputeType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum ComputeType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type ConfigurationDeploymentStatus string

// Enum values for ConfigurationDeploymentStatus
const (
	ConfigurationDeploymentStatusDeployed ConfigurationDeploymentStatus = "deployed"
	ConfigurationDeploymentStatusPending  ConfigurationDeploymentStatus = "pending"
	ConfigurationDeploymentStatusFailed   ConfigurationDeploymentStatus = "failed"
)

func (enum ConfigurationDeploymentStatus) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum ConfigurationDeploymentStatus) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type ConfigurationOptionValueType string

// Enum values for ConfigurationOptionValueType
const (
	ConfigurationOptionValueTypeScalar ConfigurationOptionValueType = "Scalar"
	ConfigurationOptionValueTypeList   ConfigurationOptionValueType = "List"
)

func (enum ConfigurationOptionValueType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum ConfigurationOptionValueType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type EnvironmentHealth string

// Enum values for EnvironmentHealth
const (
	EnvironmentHealthGreen  EnvironmentHealth = "Green"
	EnvironmentHealthYellow EnvironmentHealth = "Yellow"
	EnvironmentHealthRed    EnvironmentHealth = "Red"
	EnvironmentHealthGrey   EnvironmentHealth = "Grey"
)

func (enum EnvironmentHealth) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum EnvironmentHealth) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type EnvironmentHealthAttribute string

// Enum values for EnvironmentHealthAttribute
const (
	EnvironmentHealthAttributeStatus             EnvironmentHealthAttribute = "Status"
	EnvironmentHealthAttributeColor              EnvironmentHealthAttribute = "Color"
	EnvironmentHealthAttributeCauses             EnvironmentHealthAttribute = "Causes"
	EnvironmentHealthAttributeApplicationMetrics EnvironmentHealthAttribute = "ApplicationMetrics"
	EnvironmentHealthAttributeInstancesHealth    EnvironmentHealthAttribute = "InstancesHealth"
	EnvironmentHealthAttributeAll                EnvironmentHealthAttribute = "All"
	EnvironmentHealthAttributeHealthStatus       EnvironmentHealthAttribute = "HealthStatus"
	EnvironmentHealthAttributeRefreshedAt        EnvironmentHealthAttribute = "RefreshedAt"
)

func (enum EnvironmentHealthAttribute) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum EnvironmentHealthAttribute) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type EnvironmentHealthStatus string

// Enum values for EnvironmentHealthStatus
const (
	EnvironmentHealthStatusNoData    EnvironmentHealthStatus = "NoData"
	EnvironmentHealthStatusUnknown   EnvironmentHealthStatus = "Unknown"
	EnvironmentHealthStatusPending   EnvironmentHealthStatus = "Pending"
	EnvironmentHealthStatusOk        EnvironmentHealthStatus = "Ok"
	EnvironmentHealthStatusInfo      EnvironmentHealthStatus = "Info"
	EnvironmentHealthStatusWarning   EnvironmentHealthStatus = "Warning"
	EnvironmentHealthStatusDegraded  EnvironmentHealthStatus = "Degraded"
	EnvironmentHealthStatusSevere    EnvironmentHealthStatus = "Severe"
	EnvironmentHealthStatusSuspended EnvironmentHealthStatus = "Suspended"
)

func (enum EnvironmentHealthStatus) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum EnvironmentHealthStatus) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type EnvironmentInfoType string

// Enum values for EnvironmentInfoType
const (
	EnvironmentInfoTypeTail   EnvironmentInfoType = "tail"
	EnvironmentInfoTypeBundle EnvironmentInfoType = "bundle"
)

func (enum EnvironmentInfoType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum EnvironmentInfoType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type EnvironmentStatus string

// Enum values for EnvironmentStatus
const (
	EnvironmentStatusLaunching   EnvironmentStatus = "Launching"
	EnvironmentStatusUpdating    EnvironmentStatus = "Updating"
	EnvironmentStatusReady       EnvironmentStatus = "Ready"
	EnvironmentStatusTerminating EnvironmentStatus = "Terminating"
	EnvironmentStatusTerminated  EnvironmentStatus = "Terminated"
)

func (enum EnvironmentStatus) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum EnvironmentStatus) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type EventSeverity string

// Enum values for EventSeverity
const (
	EventSeverityTrace EventSeverity = "TRACE"
	EventSeverityDebug EventSeverity = "DEBUG"
	EventSeverityInfo  EventSeverity = "INFO"
	EventSeverityWarn  EventSeverity = "WARN"
	EventSeverityError EventSeverity = "ERROR"
	EventSeverityFatal EventSeverity = "FATAL"
)

func (enum EventSeverity) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum EventSeverity) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type FailureType string

// Enum values for FailureType
const (
	FailureTypeUpdateCancelled         FailureType = "UpdateCancelled"
	FailureTypeCancellationFailed      FailureType = "CancellationFailed"
	FailureTypeRollbackFailed          FailureType = "RollbackFailed"
	FailureTypeRollbackSuccessful      FailureType = "RollbackSuccessful"
	FailureTypeInternalFailure         FailureType = "InternalFailure"
	FailureTypeInvalidEnvironmentState FailureType = "InvalidEnvironmentState"
	FailureTypePermissionsError        FailureType = "PermissionsError"
)

func (enum FailureType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum FailureType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type InstancesHealthAttribute string

// Enum values for InstancesHealthAttribute
const (
	InstancesHealthAttributeHealthStatus       InstancesHealthAttribute = "HealthStatus"
	InstancesHealthAttributeColor              InstancesHealthAttribute = "Color"
	InstancesHealthAttributeCauses             InstancesHealthAttribute = "Causes"
	InstancesHealthAttributeApplicationMetrics InstancesHealthAttribute = "ApplicationMetrics"
	InstancesHealthAttributeRefreshedAt        InstancesHealthAttribute = "RefreshedAt"
	InstancesHealthAttributeLaunchedAt         InstancesHealthAttribute = "LaunchedAt"
	InstancesHealthAttributeSystem             InstancesHealthAttribute = "System"
	InstancesHealthAttributeDeployment         InstancesHealthAttribute = "Deployment"
	InstancesHealthAttributeAvailabilityZone   InstancesHealthAttribute = "AvailabilityZone"
	InstancesHealthAttributeInstanceType       InstancesHealthAttribute = "InstanceType"
	InstancesHealthAttributeAll                InstancesHealthAttribute = "All"
)

func (enum InstancesHealthAttribute) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum InstancesHealthAttribute) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type PlatformStatus string

// Enum values for PlatformStatus
const (
	PlatformStatusCreating PlatformStatus = "Creating"
	PlatformStatusFailed   PlatformStatus = "Failed"
	PlatformStatusReady    PlatformStatus = "Ready"
	PlatformStatusDeleting PlatformStatus = "Deleting"
	PlatformStatusDeleted  PlatformStatus = "Deleted"
)

func (enum PlatformStatus) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum PlatformStatus) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type SourceRepository string

// Enum values for SourceRepository
const (
	SourceRepositoryCodeCommit SourceRepository = "CodeCommit"
	SourceRepositoryS3         SourceRepository = "S3"
)

func (enum SourceRepository) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum SourceRepository) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type SourceType string

// Enum values for SourceType
const (
	SourceTypeGit SourceType = "Git"
	SourceTypeZip SourceType = "Zip"
)

func (enum SourceType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum SourceType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type ValidationSeverity string

// Enum values for ValidationSeverity
const (
	ValidationSeverityError   ValidationSeverity = "error"
	ValidationSeverityWarning ValidationSeverity = "warning"
)

func (enum ValidationSeverity) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum ValidationSeverity) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}
