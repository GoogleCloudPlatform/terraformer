// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package cloudwatchevents

type AssignPublicIp string

// Enum values for AssignPublicIp
const (
	AssignPublicIpEnabled  AssignPublicIp = "ENABLED"
	AssignPublicIpDisabled AssignPublicIp = "DISABLED"
)

func (enum AssignPublicIp) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum AssignPublicIp) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type EventSourceState string

// Enum values for EventSourceState
const (
	EventSourceStatePending EventSourceState = "PENDING"
	EventSourceStateActive  EventSourceState = "ACTIVE"
	EventSourceStateDeleted EventSourceState = "DELETED"
)

func (enum EventSourceState) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum EventSourceState) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type LaunchType string

// Enum values for LaunchType
const (
	LaunchTypeEc2     LaunchType = "EC2"
	LaunchTypeFargate LaunchType = "FARGATE"
)

func (enum LaunchType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum LaunchType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type RuleState string

// Enum values for RuleState
const (
	RuleStateEnabled  RuleState = "ENABLED"
	RuleStateDisabled RuleState = "DISABLED"
)

func (enum RuleState) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum RuleState) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}
