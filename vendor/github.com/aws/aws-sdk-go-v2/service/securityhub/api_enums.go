// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package securityhub

type AwsIamAccessKeyStatus string

// Enum values for AwsIamAccessKeyStatus
const (
	AwsIamAccessKeyStatusActive   AwsIamAccessKeyStatus = "Active"
	AwsIamAccessKeyStatusInactive AwsIamAccessKeyStatus = "Inactive"
)

func (enum AwsIamAccessKeyStatus) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum AwsIamAccessKeyStatus) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type ComplianceStatus string

// Enum values for ComplianceStatus
const (
	ComplianceStatusPassed       ComplianceStatus = "PASSED"
	ComplianceStatusWarning      ComplianceStatus = "WARNING"
	ComplianceStatusFailed       ComplianceStatus = "FAILED"
	ComplianceStatusNotAvailable ComplianceStatus = "NOT_AVAILABLE"
)

func (enum ComplianceStatus) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum ComplianceStatus) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type ControlStatus string

// Enum values for ControlStatus
const (
	ControlStatusEnabled  ControlStatus = "ENABLED"
	ControlStatusDisabled ControlStatus = "DISABLED"
)

func (enum ControlStatus) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum ControlStatus) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type DateRangeUnit string

// Enum values for DateRangeUnit
const (
	DateRangeUnitDays DateRangeUnit = "DAYS"
)

func (enum DateRangeUnit) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum DateRangeUnit) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type IntegrationType string

// Enum values for IntegrationType
const (
	IntegrationTypeSendFindingsToSecurityHub      IntegrationType = "SEND_FINDINGS_TO_SECURITY_HUB"
	IntegrationTypeReceiveFindingsFromSecurityHub IntegrationType = "RECEIVE_FINDINGS_FROM_SECURITY_HUB"
)

func (enum IntegrationType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum IntegrationType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type MalwareState string

// Enum values for MalwareState
const (
	MalwareStateObserved      MalwareState = "OBSERVED"
	MalwareStateRemovalFailed MalwareState = "REMOVAL_FAILED"
	MalwareStateRemoved       MalwareState = "REMOVED"
)

func (enum MalwareState) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum MalwareState) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type MalwareType string

// Enum values for MalwareType
const (
	MalwareTypeAdware              MalwareType = "ADWARE"
	MalwareTypeBlendedThreat       MalwareType = "BLENDED_THREAT"
	MalwareTypeBotnetAgent         MalwareType = "BOTNET_AGENT"
	MalwareTypeCoinMiner           MalwareType = "COIN_MINER"
	MalwareTypeExploitKit          MalwareType = "EXPLOIT_KIT"
	MalwareTypeKeylogger           MalwareType = "KEYLOGGER"
	MalwareTypeMacro               MalwareType = "MACRO"
	MalwareTypePotentiallyUnwanted MalwareType = "POTENTIALLY_UNWANTED"
	MalwareTypeSpyware             MalwareType = "SPYWARE"
	MalwareTypeRansomware          MalwareType = "RANSOMWARE"
	MalwareTypeRemoteAccess        MalwareType = "REMOTE_ACCESS"
	MalwareTypeRootkit             MalwareType = "ROOTKIT"
	MalwareTypeTrojan              MalwareType = "TROJAN"
	MalwareTypeVirus               MalwareType = "VIRUS"
	MalwareTypeWorm                MalwareType = "WORM"
)

func (enum MalwareType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum MalwareType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type MapFilterComparison string

// Enum values for MapFilterComparison
const (
	MapFilterComparisonEquals MapFilterComparison = "EQUALS"
)

func (enum MapFilterComparison) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum MapFilterComparison) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type NetworkDirection string

// Enum values for NetworkDirection
const (
	NetworkDirectionIn  NetworkDirection = "IN"
	NetworkDirectionOut NetworkDirection = "OUT"
)

func (enum NetworkDirection) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum NetworkDirection) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type Partition string

// Enum values for Partition
const (
	PartitionAws      Partition = "aws"
	PartitionAwsCn    Partition = "aws-cn"
	PartitionAwsUsGov Partition = "aws-us-gov"
)

func (enum Partition) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum Partition) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type RecordState string

// Enum values for RecordState
const (
	RecordStateActive   RecordState = "ACTIVE"
	RecordStateArchived RecordState = "ARCHIVED"
)

func (enum RecordState) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum RecordState) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type SeverityLabel string

// Enum values for SeverityLabel
const (
	SeverityLabelInformational SeverityLabel = "INFORMATIONAL"
	SeverityLabelLow           SeverityLabel = "LOW"
	SeverityLabelMedium        SeverityLabel = "MEDIUM"
	SeverityLabelHigh          SeverityLabel = "HIGH"
	SeverityLabelCritical      SeverityLabel = "CRITICAL"
)

func (enum SeverityLabel) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum SeverityLabel) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type SeverityRating string

// Enum values for SeverityRating
const (
	SeverityRatingLow      SeverityRating = "LOW"
	SeverityRatingMedium   SeverityRating = "MEDIUM"
	SeverityRatingHigh     SeverityRating = "HIGH"
	SeverityRatingCritical SeverityRating = "CRITICAL"
)

func (enum SeverityRating) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum SeverityRating) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type SortOrder string

// Enum values for SortOrder
const (
	SortOrderAsc  SortOrder = "asc"
	SortOrderDesc SortOrder = "desc"
)

func (enum SortOrder) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum SortOrder) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type StandardsStatus string

// Enum values for StandardsStatus
const (
	StandardsStatusPending    StandardsStatus = "PENDING"
	StandardsStatusReady      StandardsStatus = "READY"
	StandardsStatusFailed     StandardsStatus = "FAILED"
	StandardsStatusDeleting   StandardsStatus = "DELETING"
	StandardsStatusIncomplete StandardsStatus = "INCOMPLETE"
)

func (enum StandardsStatus) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum StandardsStatus) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type StringFilterComparison string

// Enum values for StringFilterComparison
const (
	StringFilterComparisonEquals StringFilterComparison = "EQUALS"
	StringFilterComparisonPrefix StringFilterComparison = "PREFIX"
)

func (enum StringFilterComparison) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum StringFilterComparison) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type ThreatIntelIndicatorCategory string

// Enum values for ThreatIntelIndicatorCategory
const (
	ThreatIntelIndicatorCategoryBackdoor          ThreatIntelIndicatorCategory = "BACKDOOR"
	ThreatIntelIndicatorCategoryCardStealer       ThreatIntelIndicatorCategory = "CARD_STEALER"
	ThreatIntelIndicatorCategoryCommandAndControl ThreatIntelIndicatorCategory = "COMMAND_AND_CONTROL"
	ThreatIntelIndicatorCategoryDropSite          ThreatIntelIndicatorCategory = "DROP_SITE"
	ThreatIntelIndicatorCategoryExploitSite       ThreatIntelIndicatorCategory = "EXPLOIT_SITE"
	ThreatIntelIndicatorCategoryKeylogger         ThreatIntelIndicatorCategory = "KEYLOGGER"
)

func (enum ThreatIntelIndicatorCategory) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum ThreatIntelIndicatorCategory) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type ThreatIntelIndicatorType string

// Enum values for ThreatIntelIndicatorType
const (
	ThreatIntelIndicatorTypeDomain       ThreatIntelIndicatorType = "DOMAIN"
	ThreatIntelIndicatorTypeEmailAddress ThreatIntelIndicatorType = "EMAIL_ADDRESS"
	ThreatIntelIndicatorTypeHashMd5      ThreatIntelIndicatorType = "HASH_MD5"
	ThreatIntelIndicatorTypeHashSha1     ThreatIntelIndicatorType = "HASH_SHA1"
	ThreatIntelIndicatorTypeHashSha256   ThreatIntelIndicatorType = "HASH_SHA256"
	ThreatIntelIndicatorTypeHashSha512   ThreatIntelIndicatorType = "HASH_SHA512"
	ThreatIntelIndicatorTypeIpv4Address  ThreatIntelIndicatorType = "IPV4_ADDRESS"
	ThreatIntelIndicatorTypeIpv6Address  ThreatIntelIndicatorType = "IPV6_ADDRESS"
	ThreatIntelIndicatorTypeMutex        ThreatIntelIndicatorType = "MUTEX"
	ThreatIntelIndicatorTypeProcess      ThreatIntelIndicatorType = "PROCESS"
	ThreatIntelIndicatorTypeUrl          ThreatIntelIndicatorType = "URL"
)

func (enum ThreatIntelIndicatorType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum ThreatIntelIndicatorType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type VerificationState string

// Enum values for VerificationState
const (
	VerificationStateUnknown        VerificationState = "UNKNOWN"
	VerificationStateTruePositive   VerificationState = "TRUE_POSITIVE"
	VerificationStateFalsePositive  VerificationState = "FALSE_POSITIVE"
	VerificationStateBenignPositive VerificationState = "BENIGN_POSITIVE"
)

func (enum VerificationState) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum VerificationState) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type WorkflowState string

// Enum values for WorkflowState
const (
	WorkflowStateNew        WorkflowState = "NEW"
	WorkflowStateAssigned   WorkflowState = "ASSIGNED"
	WorkflowStateInProgress WorkflowState = "IN_PROGRESS"
	WorkflowStateDeferred   WorkflowState = "DEFERRED"
	WorkflowStateResolved   WorkflowState = "RESOLVED"
)

func (enum WorkflowState) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum WorkflowState) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type WorkflowStatus string

// Enum values for WorkflowStatus
const (
	WorkflowStatusNew        WorkflowStatus = "NEW"
	WorkflowStatusNotified   WorkflowStatus = "NOTIFIED"
	WorkflowStatusResolved   WorkflowStatus = "RESOLVED"
	WorkflowStatusSuppressed WorkflowStatus = "SUPPRESSED"
)

func (enum WorkflowStatus) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum WorkflowStatus) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}
